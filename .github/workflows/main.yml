name: CI

on:
  # Executa sempre que tiver algum commit na branche master
  push:
    branches: [ main ]
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # pega a versao mais atualizada do codigo
      - uses: actions/checkout@v2
      
      #configurações do ambiente
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.x
          
      # Cache yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
             ${{ runner.os }}-yarn-
            
      # Instalar as dependencias (yarn/npm)
      - name: Install dependencies  
        run: yarn
        
       # Executar o build do projeto
      - name: Run build
        run: yarn build
        
      # Copia os arquivos para a digital Oceal (appleboy/scp-action
      - name: copy files to Digital Ocean
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{secrets.SSH_KEY}}
          source: "*, !node_modules"
          target: "~/app/GoStack-gobarber"        
       
      # executar o yarn
      - name: Install dependencies Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{secrets.SSH_KEY}}
          script: |
            cd ~/app/GoStack-gobarber
            yarn
            ./node_modules/.bin/typeorm migration:run
  
          
            
    
      

   
